* Automated lists of links                     :zettelorg:tutorial:expansion:
:PROPERTIES:
:ID:       2a73c06c-ee94-4055-806f-eebd73d6b27b
:END:

Zettelorg can generate lists of notes based on search terms, see [[id:40c6acd3-b280-481c-b57a-2bebdb0bd314][Generating lists of links]]

To make updating these lists a little more convenient, you can create a function that you can then call straight from an org codeblock.

First, let's create an additional function:

#+begin_src emacs-lisp :results silent
(defun efls/zettelorg-links (str &optional missing)
  "Crude attempt to automate `zettelorg-insert-list-links-missing'.
Meant to be called from a source block.
Replaces the list below the block with an updated list.
When MISSING is t, use `zettelorg-insert-list-links-missing'."
  (save-excursion
    (org-forward-element)
    ; Delete any existing list
    (when (org-in-item-p) (delete-region (point) (org-end-of-item-list)))
    ; New line & insert links
    (if missing
        (progn 
          (save-buffer)
          (deft-refresh)
          (zettelorg-insert-list-links-missing str))
      (zettelorg-insert-list-links str))
    (org-return-indent)
    (insert (current-time-string) "\n\n")))
#+end_src

Like it says in the doc string, this function is meant to be called from an org code block.
Try it for yourself by first executing the block above, and then the one below (with =C-c C-c=).

#+begin_src emacs-lisp :results silent
(efls/zettelorg-links "#zettelorg")
#+end_src

Neat huh?

To further automate this, we can introduce a final function that generates the code block above.
It asks for a search term and then generates the source block.

#+begin_src emacs-lisp :results silent
(defun efls/zettelorg-links-codeblock (str)
  "Ask for a STR to search, and insert an org-mode
source block that calls `efls/zettelorg-links'.
When called with a prefix, pass t to said function."
  (interactive
    (list (read-string "Search: ")))
  (newline)
  (insert "#+BEGIN_SRC emacs-lisp :results silent\n"
          "(efls/zettelorg-links \"" str"\"")
  (when current-prefix-arg (insert " t"))
  (insert ")\n"
          "#+END_SRC\n"))
#+end_src

And with a prefix, it makes sure only missing links are added (by calling =zettelorg-insert-list-links-missing=).
